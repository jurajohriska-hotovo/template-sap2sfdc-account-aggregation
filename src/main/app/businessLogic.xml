<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

    <flow name="mainFlow"  doc:description="This flow is the entry point to the business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Template exposes to trigger it.">
        <flow-ref name="gatherDataFlow" doc:name="call gatherDataFlow" doc:description="Call flow, which will obtain all accounts, which have to be merged together."/>

        <flow-ref name="formatOutputFlow" doc:name="call formatOutputFlow" doc:description="Call output formating flow to provide human readeble output of an aggregation."/>
        <flow-ref name="outboundFlow" doc:name="call outboundFlow" doc:description="Call outbound flow to send aggregation result in human readable format to the endpoinds."/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy" doc:description="If problems occured."/>
    </flow>
    <flow name="gatherDataFlow" processingStrategy="synchronous" doc:description="Gathers data from Saleforce and SAP.">
        <scatter-gather doc:name="Scatter-Gather">
            <custom-aggregation-strategy class="org.mule.templates.transformers.AccountMergeAggregationStrategy"/>
            <sfdc:query config-ref="Salesforce" query="dsql:SELECT BillingStreet,Id,Name FROM Account" doc:name="query all accounts from SalesForce"/>
            <processor-chain>
                <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_CUSTOMER_GETLIST" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="query customers from SAP">
                    <sap:definition><![CDATA[<BAPI_CUSTOMER_GETLIST type="function">
	<import>
		<MAXROWS>5</MAXROWS>
	</import>
  	<tables>
  	<IDRANGE type="table">
		<table name="IDRANGE">
			<row id="0">
				<SIGN>I</SIGN>
				<OPTION>CP</OPTION>
				<LOW>*</LOW>
				<HIGH></HIGH>
			</row>
		</table>
	</IDRANGE>
	</tables>
</BAPI_CUSTOMER_GETLIST>]]></sap:definition>

                </sap:outbound-endpoint>
                <dw:transform-message doc:name="convert SAP response to Salesforce Account">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.BAPI_CUSTOMER_GETLIST.tables.ADDRESSDATA.*row map
{
	Name: $.NAME,
	Id: $.@id as :string when ($.@id != null) otherwise null,	
	BillingStreet: $.STREET
}]]></dw:set-payload>
                </dw:transform-message>
                <logger message="SAP: #[payload]" level="INFO" doc:name="Logger"/>
            </processor-chain>
        </scatter-gather>
    </flow>
    <flow name="formatOutputFlow" processingStrategy="synchronous" doc:description="Aggregation output is sorted by the custom component(see org.mule.templates.transformers.SortAccountList) and mapped to CSV format.">
        <custom-transformer class="org.mule.templates.transformers.SortAccountList" doc:name="Custom component to sort users list"/>
        <dw:transform-message doc:name="Map To CSV">
            <dw:set-payload><![CDATA[%dw 1.0
%input payload application/java
%output application/csv header=true, quoteValues=true
---
payload map
{
	Name: $.Name,
	"Id in org A": $.IDInA,
	"Street in org A": $.StreetInA,
	"Id in org B": $.IDInB,
	"Street in org B": $.StreetInB
}]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="CSV Output Object to String"/>

    </flow>
</mule>
